AMD Drivers & ROCm on Ubuntu

Here are the new official instructions for installing the AMD drivers using the package manager. The necessary steps have been copied here for your convenience.

Copy and paste the following commands to install ROCm:

sudo apt install "linux-headers-$(uname -r)" "linux-modules-extra-$(uname -r)"

sudo usermod -a -G render,video $LOGNAME

Enter one of the following lines depending on your version of Ubuntu:

Ubuntu 22.04: wget https://repo.radeon.com/amdgpu-install/6.0.2/ubuntu/jammy/amdgpu-install_6.0.60002-1_all.deb

Ubuntu 20.04: wget https://repo.radeon.com/amdgpu-install/6.0.2/ubuntu/focal/amdgpu-install_6.0.60002-1_all.deb

sudo apt install ./amdgpu-install_6.0.60002-1_all.deb

sudo apt update

sudo apt install amdgpu-dkms

sudo apt install rocm



Other Requirements

The following step is only required with certain consumer grade GPUs, or if your CPU contains an integrated GPU. If you're running a professional card, an RDNA 2 GPU with 16GB of VRAM (i.e. RX 6800 XT, 6900 XT), or a 7900 XTX/XT then the following step is not necessary. Lower tiered cards will require the following step. If your system has a CPU with an integrated GPU (Ryzen 7000) then it may also require this step.

Edit ~/.profile with the following command:

sudo nano ~/.profile

Paste the following line at the bottom of the file, then press ctrl-x and save the file.

For RDNA and RDNA 2 cards:

export HSA_OVERRIDE_GFX_VERSION=10.3.0

For RDNA 3 cards:

export HSA_OVERRIDE_GFX_VERSION=11.0.0

Now make sure to restart your computer before continuing. 
Then you can check if ROCm was installed successfully by running 
>rocminfo
If an error is returned then something went wrong with the installation. Another possibility is that secure boot may cause issues on some systems, so if you received an error here then disabling secure boot may help.

PyTorch

Next we'll download PyTorch with PIP in a Python virtual environment. First install the required software by entering:

sudo apt install git python3-pip python3-venv libstdc++-12-dev

Now we can install PyTorch, but it's best to create a Python virtual environment before installing packages with PIP. To create a default environment, enter:

python3 -m venv venv

The previous command should have created a folder named venv in your current directory, make sure you don't delete this folder. Next you'll need to activate that environment. Each time you open a new terminal it will need to be re-activated if you want to use PyTorch or any other PIP packages.

. venv/bin/activate

Now PyTorch can be installed:

pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm5.7

Let's verify PyTorch was installed correctly with GPU support, so lets first enter the Python console.

python3

Now enter the following two lines of code. If it returns True then everything was installed correctly.

import torch
torch.cuda.is_available()

Then enter exit() to exit the Python console.
Stable Diffusion

Now we'll test it out with real applications, let's start with Stable Diffusion Web UI. First install this package for improved performance with Stable Diffusion:

sudo apt install --no-install-recommends google-perftools

Next download the repository, enter the directory, and setup a virtual environment:

git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui
cd stable-diffusion-webui

Now we can run it with this command:

./webui.sh

The program will automatically download a model but there are much better ones available to download at huggingface.co. Simply search for Stable Diffusion to see what's available. As an example you could download Stable Diffusion v2-1 which is newer than the stock model that was provided. You'll need to place this file in the stable-diffusion-webui/models/stable-diffusion/ folder.

Next open your web browser and enter the address localhost:7860 to access the UI. If you downloaded the v2-1 .ckpt model I linked to above, then you'll need to go into the Settings tab and then the Stable Diffusion section, and make sure to check the box that says “upcast cross attention layer to float32”. This step isn't necessary for the stock v1-5 model. Now you can navigate to the txt2img section, select your desired model at the top, enter your prompt, then press generate. The first time it runs might take several minutes, but following runs will be much quicker. To exit, go to the terminal and press ctrl-c.
